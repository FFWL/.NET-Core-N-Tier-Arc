#pragma checksum "C:\Users\ASUS\source\repos\CoreDemo\CoreDemo\Views\Writer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8b1bd0436cd791eb53f6bcb4ddd2e88af73004e2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Writer_Index), @"mvc.1.0.view", @"/Views/Writer/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Writer/Index.cshtml", typeof(AspNetCore.Views_Writer_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\ASUS\source\repos\CoreDemo\CoreDemo\Views\_ViewImports.cshtml"
using CoreDemo;

#line default
#line hidden
#line 2 "C:\Users\ASUS\source\repos\CoreDemo\CoreDemo\Views\_ViewImports.cshtml"
using CoreDemo.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8b1bd0436cd791eb53f6bcb4ddd2e88af73004e2", @"/Views/Writer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c0e2cbebe4b7cca4b09168dd159f601192fafdf0", @"/Views/_ViewImports.cshtml")]
    public class Views_Writer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\ASUS\source\repos\CoreDemo\CoreDemo\Views\Writer\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/AdminLayout.cshtml";

#line default
#line hidden
            BeginContext(94, 1267, true);
            WriteLiteral(@"
<h1>Ajax</h1>
<br />

<button type=""button"" id=""btnlist"" class=""btn btn-outline-primary"">Writer List</button>
<button type=""button"" id=""btngetbyid"" class=""btn btn-outline-success"">Writer Information</button>
<button type=""button"" id=""btnaddwriter"" class=""btn btn-outline-info"">Add Writer</button>
<button type=""button"" id=""btndeletewriter"" class=""btn btn-outline-danger"">Delete Writer</button>
<button type=""button"" id=""btnupdatewriter"" class=""btn btn-outline-warning"">Update Writer</button>
<br />
<br />
<div id=""writerlist"">

</div>
<br />
<div id=""writerget"">

</div>
<br />
<div>
    <input type=""text"" id=""writerid"" placeholder=""Writer ID Value"" class=""form-control"" />
</div>
<br />
<div>
    <input type=""text"" class=""form-control"" id=""txtWriterid"" placeholder=""Writer ID"" />
    <br />
    <input type=""text"" class=""form-control"" id=""txtWritername"" placeholder=""Writer Name"" />
</div>

<div>
    <input type=""text"" class=""form-control"" id=""txtid"" placeholder=""Writer ID for Delete"" />");
            WriteLiteral("\r\n</div>\r\n<br />\r\n<div>\r\n    <input type=\"text\" class=\"form-control\" id=\"txtid1\" placeholder=\"Writer ID for Update\" />\r\n    <input type=\"text\" class=\"form-control\" id=\"txtwritername1\" placeholder=\"Writer Name for Update\" />\r\n</div>\r\n<br />\r\n\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(1378, 3257, true);
                WriteLiteral(@"

    <script>
        $(document).ready(function () {
            $(""#btnlist"").click(function () {
                $.ajax({
                    contentType: ""application/json"",
                    dataType: ""json"",
                    type: ""Get"",
                    url: ""/Admin/Writer/WriterList"",
                    success: function (func) {
                        let w = jQuery.parseJSON(func);
                        let tablehtml = ""<table class=table table-bordered> <tr><th>Writer ID </th> <th>Writer Name</th></tr>"";
                        $.each(w, (index, value) => {
                            tablehtml += `<tr><td>${value.Id}</td> <td>${value.Name}</td></tr>`
                        });
                        tablehtml += ""</table"";
                        $(""#writerlist"").html(tablehtml);
                    }
                });
            });


            $(""#btngetbyid"").click(x => {
                let id = $(""#writerid"").val();
                $.ajax({
      ");
                WriteLiteral(@"              contentType: ""application/json"",
                    dataType: ""json"",
                    type: ""get"",
                    url: ""/Admin/Writer/GetWriterByID/"",
                    data: { writerid: id },
                    success: function (func) {
                        let w = jQuery.parseJSON(func);
                        console.log(w);

                        let getvalue = `<table class=table table-bordered> <tr><th>Writer ID</th> <th>Writer Name</th></tr> <tr><td>${w.Id}</td><td>${w.Name}</td></tr></table>`;
                        $(""#writerget"").html(getvalue);
                    }
                });
            });

            $(""#btnaddwriter"").click(function () {
                let writer = {
                    Id: $(""#txtWriterid"").val(),
                    Name: $(""#txtWritername"").val()
                };
                $.ajax({
                    type: ""post"",
                    url: ""/Admin/Writer/AddWriter/"",
                    data: write");
                WriteLiteral(@"r,
                    success: function (func) {
                        let result = jQuery.parseJSON(func);
                        alert(""Writer Added successfully"");
                    }
                });
            });

            $(""#btndeletewriter"").click(x => {
                let id = $(""#txtid"").val();
                $.ajax({
                    url: ""/Admin/Writer/DeleteWriter/"" + id,
                    type: ""post"",
                    dataType: ""json"",
                    success: function (func) {
                       alert(""Writer Deleted successfully"")
                    }
                });
            });

            $(""#btnupdatewriter"").click(function () {
                let writer = {
                    Id: $(""#txtid1"").val(),
                    Name: $(""#txtwritername1"").val()
                };
                $.ajax({
                    type: ""post"",
                    url: ""/Admin/Writer/UpdateWriter/"",
                    data: writer,
");
                WriteLiteral("                    success: function (func) {\r\n                        console.log(data);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
